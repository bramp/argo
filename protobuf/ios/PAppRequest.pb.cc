// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: PAppRequest.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "PAppRequest.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* PAppRequestParam_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PAppRequestParam_reflection_ = NULL;
const ::google::protobuf::Descriptor* PAppRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PAppRequest_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_PAppRequest_2eproto() {
  protobuf_AddDesc_PAppRequest_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "PAppRequest.proto");
  GOOGLE_CHECK(file != NULL);
  PAppRequestParam_descriptor_ = file->message_type(0);
  static const int PAppRequestParam_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PAppRequestParam, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PAppRequestParam, intvalue_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PAppRequestParam, strvalue_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PAppRequestParam, longvalue_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PAppRequestParam, floatvalue_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PAppRequestParam, boolvalue_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PAppRequestParam, bytesvalue_),
  };
  PAppRequestParam_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PAppRequestParam_descriptor_,
      PAppRequestParam::default_instance_,
      PAppRequestParam_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PAppRequestParam, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PAppRequestParam, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PAppRequestParam));
  PAppRequest_descriptor_ = file->message_type(1);
  static const int PAppRequest_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PAppRequest, authid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PAppRequest, sessionid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PAppRequest, version_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PAppRequest, sign_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PAppRequest, nonce_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PAppRequest, param_),
  };
  PAppRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PAppRequest_descriptor_,
      PAppRequest::default_instance_,
      PAppRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PAppRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PAppRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PAppRequest));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_PAppRequest_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PAppRequestParam_descriptor_, &PAppRequestParam::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PAppRequest_descriptor_, &PAppRequest::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_PAppRequest_2eproto() {
  delete PAppRequestParam::default_instance_;
  delete PAppRequestParam_reflection_;
  delete PAppRequest::default_instance_;
  delete PAppRequest_reflection_;
}

void protobuf_AddDesc_PAppRequest_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\021PAppRequest.proto\"\222\001\n\020PAppRequestParam"
    "\022\014\n\004name\030\001 \002(\t\022\020\n\010intValue\030\002 \001(\005\022\020\n\010strV"
    "alue\030\003 \001(\t\022\021\n\tlongValue\030\004 \001(\003\022\022\n\nfloatVa"
    "lue\030\005 \001(\002\022\021\n\tboolValue\030\006 \001(\010\022\022\n\nbytesVal"
    "ue\030\007 \001(\014\"\200\001\n\013PAppRequest\022\016\n\006authId\030\001 \002(\t"
    "\022\021\n\tsessionId\030\002 \001(\t\022\017\n\007version\030\003 \001(\005\022\014\n\004"
    "sign\030\004 \001(\t\022\r\n\005nonce\030\005 \001(\t\022 \n\005param\030\006 \003(\013"
    "2\021.PAppRequestParamB+\n\025com.argo.sdk.prot"
    "obufB\020PAppRequestProtoP\001", 344);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "PAppRequest.proto", &protobuf_RegisterTypes);
  PAppRequestParam::default_instance_ = new PAppRequestParam();
  PAppRequest::default_instance_ = new PAppRequest();
  PAppRequestParam::default_instance_->InitAsDefaultInstance();
  PAppRequest::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_PAppRequest_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_PAppRequest_2eproto {
  StaticDescriptorInitializer_PAppRequest_2eproto() {
    protobuf_AddDesc_PAppRequest_2eproto();
  }
} static_descriptor_initializer_PAppRequest_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int PAppRequestParam::kNameFieldNumber;
const int PAppRequestParam::kIntValueFieldNumber;
const int PAppRequestParam::kStrValueFieldNumber;
const int PAppRequestParam::kLongValueFieldNumber;
const int PAppRequestParam::kFloatValueFieldNumber;
const int PAppRequestParam::kBoolValueFieldNumber;
const int PAppRequestParam::kBytesValueFieldNumber;
#endif  // !_MSC_VER

PAppRequestParam::PAppRequestParam()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PAppRequestParam::InitAsDefaultInstance() {
}

PAppRequestParam::PAppRequestParam(const PAppRequestParam& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PAppRequestParam::SharedCtor() {
  _cached_size_ = 0;
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  intvalue_ = 0;
  strvalue_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  longvalue_ = GOOGLE_LONGLONG(0);
  floatvalue_ = 0;
  boolvalue_ = false;
  bytesvalue_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PAppRequestParam::~PAppRequestParam() {
  SharedDtor();
}

void PAppRequestParam::SharedDtor() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (strvalue_ != &::google::protobuf::internal::kEmptyString) {
    delete strvalue_;
  }
  if (bytesvalue_ != &::google::protobuf::internal::kEmptyString) {
    delete bytesvalue_;
  }
  if (this != default_instance_) {
  }
}

void PAppRequestParam::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PAppRequestParam::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PAppRequestParam_descriptor_;
}

const PAppRequestParam& PAppRequestParam::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_PAppRequest_2eproto();
  return *default_instance_;
}

PAppRequestParam* PAppRequestParam::default_instance_ = NULL;

PAppRequestParam* PAppRequestParam::New() const {
  return new PAppRequestParam;
}

void PAppRequestParam::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_name()) {
      if (name_ != &::google::protobuf::internal::kEmptyString) {
        name_->clear();
      }
    }
    intvalue_ = 0;
    if (has_strvalue()) {
      if (strvalue_ != &::google::protobuf::internal::kEmptyString) {
        strvalue_->clear();
      }
    }
    longvalue_ = GOOGLE_LONGLONG(0);
    floatvalue_ = 0;
    boolvalue_ = false;
    if (has_bytesvalue()) {
      if (bytesvalue_ != &::google::protobuf::internal::kEmptyString) {
        bytesvalue_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PAppRequestParam::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string name = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_intValue;
        break;
      }

      // optional int32 intValue = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_intValue:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &intvalue_)));
          set_has_intvalue();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_strValue;
        break;
      }

      // optional string strValue = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_strValue:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strvalue()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strvalue().data(), this->strvalue().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_longValue;
        break;
      }

      // optional int64 longValue = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_longValue:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &longvalue_)));
          set_has_longvalue();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(45)) goto parse_floatValue;
        break;
      }

      // optional float floatValue = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED32) {
         parse_floatValue:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &floatvalue_)));
          set_has_floatvalue();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_boolValue;
        break;
      }

      // optional bool boolValue = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_boolValue:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &boolvalue_)));
          set_has_boolvalue();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(58)) goto parse_bytesValue;
        break;
      }

      // optional bytes bytesValue = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_bytesValue:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_bytesvalue()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PAppRequestParam::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->name(), output);
  }

  // optional int32 intValue = 2;
  if (has_intvalue()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->intvalue(), output);
  }

  // optional string strValue = 3;
  if (has_strvalue()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->strvalue(), output);
  }

  // optional int64 longValue = 4;
  if (has_longvalue()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->longvalue(), output);
  }

  // optional float floatValue = 5;
  if (has_floatvalue()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->floatvalue(), output);
  }

  // optional bool boolValue = 6;
  if (has_boolvalue()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->boolvalue(), output);
  }

  // optional bytes bytesValue = 7;
  if (has_bytesvalue()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      7, this->bytesvalue(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PAppRequestParam::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional int32 intValue = 2;
  if (has_intvalue()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->intvalue(), target);
  }

  // optional string strValue = 3;
  if (has_strvalue()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->strvalue(), target);
  }

  // optional int64 longValue = 4;
  if (has_longvalue()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->longvalue(), target);
  }

  // optional float floatValue = 5;
  if (has_floatvalue()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->floatvalue(), target);
  }

  // optional bool boolValue = 6;
  if (has_boolvalue()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->boolvalue(), target);
  }

  // optional bytes bytesValue = 7;
  if (has_bytesvalue()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        7, this->bytesvalue(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PAppRequestParam::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional int32 intValue = 2;
    if (has_intvalue()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->intvalue());
    }

    // optional string strValue = 3;
    if (has_strvalue()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strvalue());
    }

    // optional int64 longValue = 4;
    if (has_longvalue()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->longvalue());
    }

    // optional float floatValue = 5;
    if (has_floatvalue()) {
      total_size += 1 + 4;
    }

    // optional bool boolValue = 6;
    if (has_boolvalue()) {
      total_size += 1 + 1;
    }

    // optional bytes bytesValue = 7;
    if (has_bytesvalue()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->bytesvalue());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PAppRequestParam::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PAppRequestParam* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PAppRequestParam*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PAppRequestParam::MergeFrom(const PAppRequestParam& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_name()) {
      set_name(from.name());
    }
    if (from.has_intvalue()) {
      set_intvalue(from.intvalue());
    }
    if (from.has_strvalue()) {
      set_strvalue(from.strvalue());
    }
    if (from.has_longvalue()) {
      set_longvalue(from.longvalue());
    }
    if (from.has_floatvalue()) {
      set_floatvalue(from.floatvalue());
    }
    if (from.has_boolvalue()) {
      set_boolvalue(from.boolvalue());
    }
    if (from.has_bytesvalue()) {
      set_bytesvalue(from.bytesvalue());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PAppRequestParam::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PAppRequestParam::CopyFrom(const PAppRequestParam& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PAppRequestParam::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void PAppRequestParam::Swap(PAppRequestParam* other) {
  if (other != this) {
    std::swap(name_, other->name_);
    std::swap(intvalue_, other->intvalue_);
    std::swap(strvalue_, other->strvalue_);
    std::swap(longvalue_, other->longvalue_);
    std::swap(floatvalue_, other->floatvalue_);
    std::swap(boolvalue_, other->boolvalue_);
    std::swap(bytesvalue_, other->bytesvalue_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PAppRequestParam::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PAppRequestParam_descriptor_;
  metadata.reflection = PAppRequestParam_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PAppRequest::kAuthIdFieldNumber;
const int PAppRequest::kSessionIdFieldNumber;
const int PAppRequest::kVersionFieldNumber;
const int PAppRequest::kSignFieldNumber;
const int PAppRequest::kNonceFieldNumber;
const int PAppRequest::kParamFieldNumber;
#endif  // !_MSC_VER

PAppRequest::PAppRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PAppRequest::InitAsDefaultInstance() {
}

PAppRequest::PAppRequest(const PAppRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PAppRequest::SharedCtor() {
  _cached_size_ = 0;
  authid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  sessionid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  version_ = 0;
  sign_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  nonce_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PAppRequest::~PAppRequest() {
  SharedDtor();
}

void PAppRequest::SharedDtor() {
  if (authid_ != &::google::protobuf::internal::kEmptyString) {
    delete authid_;
  }
  if (sessionid_ != &::google::protobuf::internal::kEmptyString) {
    delete sessionid_;
  }
  if (sign_ != &::google::protobuf::internal::kEmptyString) {
    delete sign_;
  }
  if (nonce_ != &::google::protobuf::internal::kEmptyString) {
    delete nonce_;
  }
  if (this != default_instance_) {
  }
}

void PAppRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PAppRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PAppRequest_descriptor_;
}

const PAppRequest& PAppRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_PAppRequest_2eproto();
  return *default_instance_;
}

PAppRequest* PAppRequest::default_instance_ = NULL;

PAppRequest* PAppRequest::New() const {
  return new PAppRequest;
}

void PAppRequest::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_authid()) {
      if (authid_ != &::google::protobuf::internal::kEmptyString) {
        authid_->clear();
      }
    }
    if (has_sessionid()) {
      if (sessionid_ != &::google::protobuf::internal::kEmptyString) {
        sessionid_->clear();
      }
    }
    version_ = 0;
    if (has_sign()) {
      if (sign_ != &::google::protobuf::internal::kEmptyString) {
        sign_->clear();
      }
    }
    if (has_nonce()) {
      if (nonce_ != &::google::protobuf::internal::kEmptyString) {
        nonce_->clear();
      }
    }
  }
  param_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PAppRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string authId = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_authid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->authid().data(), this->authid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_sessionId;
        break;
      }

      // optional string sessionId = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_sessionId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sessionid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->sessionid().data(), this->sessionid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_version;
        break;
      }

      // optional int32 version = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_version:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &version_)));
          set_has_version();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_sign;
        break;
      }

      // optional string sign = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_sign:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sign()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->sign().data(), this->sign().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_nonce;
        break;
      }

      // optional string nonce = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_nonce:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_nonce()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->nonce().data(), this->nonce().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_param;
        break;
      }

      // repeated .PAppRequestParam param = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_param:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_param()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_param;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PAppRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string authId = 1;
  if (has_authid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->authid().data(), this->authid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->authid(), output);
  }

  // optional string sessionId = 2;
  if (has_sessionid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->sessionid().data(), this->sessionid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->sessionid(), output);
  }

  // optional int32 version = 3;
  if (has_version()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->version(), output);
  }

  // optional string sign = 4;
  if (has_sign()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->sign().data(), this->sign().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->sign(), output);
  }

  // optional string nonce = 5;
  if (has_nonce()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->nonce().data(), this->nonce().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->nonce(), output);
  }

  // repeated .PAppRequestParam param = 6;
  for (int i = 0; i < this->param_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->param(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PAppRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string authId = 1;
  if (has_authid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->authid().data(), this->authid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->authid(), target);
  }

  // optional string sessionId = 2;
  if (has_sessionid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->sessionid().data(), this->sessionid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->sessionid(), target);
  }

  // optional int32 version = 3;
  if (has_version()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->version(), target);
  }

  // optional string sign = 4;
  if (has_sign()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->sign().data(), this->sign().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->sign(), target);
  }

  // optional string nonce = 5;
  if (has_nonce()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->nonce().data(), this->nonce().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->nonce(), target);
  }

  // repeated .PAppRequestParam param = 6;
  for (int i = 0; i < this->param_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, this->param(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PAppRequest::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string authId = 1;
    if (has_authid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->authid());
    }

    // optional string sessionId = 2;
    if (has_sessionid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->sessionid());
    }

    // optional int32 version = 3;
    if (has_version()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->version());
    }

    // optional string sign = 4;
    if (has_sign()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->sign());
    }

    // optional string nonce = 5;
    if (has_nonce()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->nonce());
    }

  }
  // repeated .PAppRequestParam param = 6;
  total_size += 1 * this->param_size();
  for (int i = 0; i < this->param_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->param(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PAppRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PAppRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PAppRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PAppRequest::MergeFrom(const PAppRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  param_.MergeFrom(from.param_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_authid()) {
      set_authid(from.authid());
    }
    if (from.has_sessionid()) {
      set_sessionid(from.sessionid());
    }
    if (from.has_version()) {
      set_version(from.version());
    }
    if (from.has_sign()) {
      set_sign(from.sign());
    }
    if (from.has_nonce()) {
      set_nonce(from.nonce());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PAppRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PAppRequest::CopyFrom(const PAppRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PAppRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  for (int i = 0; i < param_size(); i++) {
    if (!this->param(i).IsInitialized()) return false;
  }
  return true;
}

void PAppRequest::Swap(PAppRequest* other) {
  if (other != this) {
    std::swap(authid_, other->authid_);
    std::swap(sessionid_, other->sessionid_);
    std::swap(version_, other->version_);
    std::swap(sign_, other->sign_);
    std::swap(nonce_, other->nonce_);
    param_.Swap(&other->param_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PAppRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PAppRequest_descriptor_;
  metadata.reflection = PAppRequest_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
